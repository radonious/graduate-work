{
  "navbar": {
    "home": "Home",
    "history": "History",
    "about": "About",
    "profile": "Profile",
    "login": "Log In",
    "logout": "Log Out"
  },
  "footer": {
    "copyright": "© A.M. Ermolaev, 2025",
    "help": "Help",
    "privacy": "Privacy",
    "terms": "Terms"
  },
  "login": {
    "title": "Log In",
    "username": "Username",
    "password": "Password",
    "hide": "Hide",
    "show": "Show",
    "submit": "Log In",
    "success": "Login successful!",
    "signup_text": "Don’t have an account?",
    "signup": "Sign Up",
    "error": "Invalid user credentials",
    "error_server": "Server connection error"
  },
  "register": {
    "title": "Registration",
    "username": "Username",
    "password": "Password",
    "show": "Show",
    "hide": "Hide",
    "confirm_password": "Confirm Password",
    "submit": "Create a new account",
    "login_text": "Already have an account?",
    "login": "Log In",
    "passwords_not_match": "Passwords don’t match",
    "error": "A user with this name already exists",
    "error_server": "Server connection error"
  },
  "profile": {
    "title": "Profile",
    "username": "Username",
    "role": "Role",
    "id": "User ID",
    "logout": "Logout",
    "delete": "Delete account"
  },
  "home": {
    "title": "Anti-Plagiarism",
    "snippet": {
      "comment": "// Put your code here"
    },
    "files": {
      "drag": "Drag & Drop",
      "supported": "Supports only .java and .zip files",
      "manual": "Load files manually",
      "choose": "Choose file",
      "nothing": "Nothing loaded",
      "loaded": "Loaded file",
      "size": "Size"
    },
    "settings": {
      "load": "Load files",
      "check": "Check",
      "progress": "In progress...",
      "profile": {
        "title": "Profile",
        "speed": "Speed",
        "quality": "Quality",
        "custom": "Custom"
      },
      "minFileLength": "Minimum file length",
      "maxFileLengthDiffRate": "Maximum file difference",
      "lexicalPlagiarismThreshold": "Lexical plagiarism threshold",
      "lexicalAnalysisEnable": "Lexical analysis",
      "syntaxPlagiarismThreshold": "Syntax plagiarism threshold",
      "syntaxAnalysisEnable": "Syntax analysis",
      "saveSourcesIntoDatabase": "Save files on server"
    },
    "tooltip": {
      "profile": "Preferred scan profile",
      "minFileLength": "Files from the database with a shorter length will not be used during verification",
      "maxFileLengthDiffRate": "Files from the database with a greater difference in size will not be used during verification",
      "lexicalAnalysisEnable": "Responsible for comparing program text. Does not take into account the structure",
      "lexicalPlagiarismThreshold": "Exceeding the value is considered plagiarism and is displayed in the results",
      "syntaxAnalysisEnable": "Responsible for comparing program structure. Does not take text into account",
      "syntaxPlagiarismThreshold": "Exceeding the value is considered plagiarism and is displayed in the results"
    },
    "results": {
      "title": "Check Results",
      "date": "Date",
      "time": "Time",
      "duration": "Duration",
      "ms": "ms",
      "checks": "Number of Comparisons",
      "unique": "Uniqueness Percentage",
      "plagiarism": "Plagiarism Percentage",
      "table": {
        "title": "Detected borrowings",
        "file_db": "Compared with",
        "lines": "Length",
        "analysis": "Analyzer type",
        "analysis_type": {
          "lexical": "Lexical",
          "syntax": "Syntax",
          "both": "Syn. & Lex."
        },
        "plagiarism": "Match"
      }
    }
  },
  "history": {
    "title": "Check History",
    "date": "Date",
    "time": "Time",
    "type": "Type",
    "plagiarism": "Plagiarism",
    "uniqueness": "Uniqueness",
    "lexical": "Lexical",
    "syntax": "Syntax",
    "yes": "Yes",
    "no": "No"
  },
  "about": {
    "title": "About the Project",
    "desc_title": "Description",
    "desc_text": "The project is a web application designed to automatically check Java code for plagiarism. It identifies code similarities both at the textual level (lexical analysis) and structural level (syntactic analysis). The primary goal is to simplify the process of verifying code originality for educational and commercial purposes.",
    "tech_title": "Technologies",
    "tech_text": "The backend is built on Kotlin and Spring Boot, ensuring flexibility and scalability. Security is implemented via Spring Security with JWT authentication and role-based access control. Data is stored in PostgreSQL, and Spring Data JPA streamlines database interactions. Lexical analysis utilizes ANTLR and JavaParser, while syntactic analysis employs graph comparison algorithms. Asynchronous file processing is handled by Kotlin Coroutines, accelerating checks for projects with numerous files. The web interface is developed using Vue.js with Vite for bundling, and navigation is managed via Vue Router.",
    "arch_title": "Architecture",
    "arch_text": "The project follows a layered architecture: Controllers handle HTTP requests, Services contain analysis logic (lexical/syntactic modules and data filtering), and Repositories manage database interactions. For optimization, each file is processed in a separate coroutine. The maximum upload size is 250 MB, but projects under 5 MB (after removing third-party libraries) are recommended for efficient processing.",
    "settings_title": "Usage",
    "settings_text": "The application can be used via GUI or REST API. Key settings include predefined profiles ('Speed', 'Quality', and a custom mode), filters for minimum lines per file and maximum file length difference, a plagiarism threshold to flag copied code, and an option to save projects to the database for future comparisons.",
    "other_title": "Future Plans",
    "other_text": "Planned improvements: Optimizing syntactic analysis algorithms for faster processing, adding support for new programming languages, visualizing code matches to highlight plagiarism, and integrating AI for contextual similarity detection."
  }
}
